basePath: /api/v1
definitions:
  domain.Car:
    properties:
      id:
        type: integer
      mark:
        type: string
      model:
        type: string
      owner:
        $ref: '#/definitions/domain.Owner'
      reg_num:
        type: string
      year:
        type: integer
    type: object
  domain.CarDataUpdatingRequest:
    properties:
      mark:
        type: string
      model:
        type: string
      owner:
        $ref: '#/definitions/domain.Owner'
      reg_num:
        type: string
      year:
        type: integer
    type: object
  domain.Owner:
    properties:
      name:
        type: string
      patronymic:
        type: string
      surname:
        type: string
    type: object
  domain.RegNumberRequest:
    properties:
      reg_number:
        type: string
    type: object
  v1.Response:
    properties:
      message:
        type: string
    type: object
host: localhost:8888
info:
  contact: {}
  description: This is basic server for a car service
  title: EffectiveTask API
  version: "1.0"
paths:
  /{id}:
    get:
      consumes:
      - application/json
      description: Getting car info by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Car'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.Response'
      summary: Get car info by id
      tags:
      - car
  /add:
    post:
      consumes:
      - application/json
      description: Adding new cars with his all info
      parameters:
      - description: regNumber
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.RegNumberRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully added
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.Response'
      summary: Adding new cars
      tags:
      - car
  /cars/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a car by Id
      parameters:
      - description: Car ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.Response'
      summary: Delete a car
      tags:
      - car
  /list:
    get:
      consumes:
      - application/json
      description: Getting cars info by filter
      parameters:
      - description: Car reg number
        in: query
        name: reg_num
        type: string
      - description: Car mark
        in: query
        name: mark
        type: string
      - description: Car model
        in: query
        name: model
        type: string
      - description: Limit for pagination
        in: query
        name: limit
        type: integer
      - description: Offset for pagination
        in: query
        name: offset
        type: string
      - description: Owner`s name
        in: query
        name: name
        type: string
      - description: Owner`s surname
        in: query
        name: surname
        type: string
      - description: Owner`s patronymic
        in: query
        name: patronymic
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Car'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.Response'
      summary: Get cars list by filter
      tags:
      - car
  /update/{id}:
    put:
      consumes:
      - application/json
      description: Updating car details by ID
      parameters:
      - description: Car ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update Car Request
        in: body
        name: car
        required: true
        schema:
          $ref: '#/definitions/domain.CarDataUpdatingRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Succesfully updated
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.Response'
      summary: Update car information
      tags:
      - car
swagger: "2.0"
